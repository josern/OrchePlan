rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      // Allow any authenticated user to read any user's profile.
      allow read: if request.auth != null;
      // Users can only write to their own document.
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    match /projects/{projectId} {
      // User must be a member to read or update a project.
      allow read, write: if request.auth != null && request.auth.uid in resource.data.members;
      // Any authenticated user can create a project.
      allow create: if request.auth != null;
      // Only the project owner can delete a project.
      allow delete: if request.auth != null && resource.data.members[request.auth.uid] == 'owner';
    }

    match /tasks/{taskId} {
      // Allow users to read, update, or delete tasks if they are a member of the parent project.
      allow read, update, delete: if request.auth != null && (request.auth.uid in get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.members);
      // Allow users to create a task if they are a member of the project being assigned to.
      allow create: if request.auth != null && (request.auth.uid in get(/databases/$(database)/documents/projects/$(request.resource.data.projectId)).data.members);
    }

    match /task_statuses/{statusId} {
      // Allow any authenticated user to read and write statuses.
      allow read, write : if request.auth != null;
    }
  }
}